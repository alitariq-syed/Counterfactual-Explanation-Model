
 Namespace(filter_visualization=True, user_evaluation=False, train_counterfactual_net=True, train_all_classes=True, dropout=False, train_singular_counterfactual_net=False, choose_subclass=False, counterfactual_PP=False, resume_counterfactual_net=True, resume_from_epoch=30, test_counterfactual_net=False, load_counterfactual_net=True, resume=True, alter_class=0, analysis_class=6, find_global_filters=False, cfe_epochs=60, l1_weight=2, save_logFile=True, augmentation=True, dataset='fmnist', save_directory='./trained_weights/', train_using_builtin_fit_method=True, train=False, fine_tune=False, test=True, model='customCNN/', imagenet_weights=False) 

[4;33mReloaded modules[24m: codes.train_counterfactual_net, customCNN, load_base_model, codes.load_cxr_dataset, load_data, config[0m
> [0;32me:\medical imaging diagnostic (mid) lab\xai in mid\counterfactual-explanation-model\train_cfe_model.py[0m(2)[0;36m<module>[0;34m()[0m
[0;32m      1 [0;31m[0;31m# -*- coding: utf-8 -*-[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m----> 2 [0;31m"""
[0m[0;32m      3 [0;31m[0mCreated[0m [0mon[0m [0mWed[0m [0mApr[0m [0;36m15[0m [0;36m13[0m[0;34m:[0m[0;36m43[0m[0;34m:[0m[0;36m27[0m [0;36m2020[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;34m@[0m[0mauthor[0m[0;34m:[0m [0mAli[0m[0;34m[0m[0;34m[0m[0m
[0m
TF version:  2.6.0
...GPU set_memory_growth successfully set...
batch_size:  32
not using imagenet_weights
not saving log file

 Namespace(filter_visualization=True, user_evaluation=False, train_counterfactual_net=True, train_all_classes=True, dropout=False, train_singular_counterfactual_net=False, choose_subclass=False, counterfactual_PP=False, resume_counterfactual_net=True, resume_from_epoch=30, test_counterfactual_net=False, load_counterfactual_net=True, resume=True, alter_class=0, analysis_class=6, find_global_filters=False, cfe_epochs=60, l1_weight=2, save_logFile=False, augmentation=True, dataset='fmnist', save_directory='./trained_weights/', train_using_builtin_fit_method=True, train=False, fine_tune=False, test=True, model='customCNN/', imagenet_weights=False) 

> [0;32me:\medical imaging diagnostic (mid) lab\xai in mid\counterfactual-explanation-model\train_cfe_model.py[0m(90)[0;36m<module>[0;34m()[0m
[0;32m     88 [0;31m[0;34m[0m[0m
[0m[0;32m     89 [0;31m    [0;31m#%% create base model[0m[0;34m[0m[0;34m[0m[0m
[0m[1;31m29[0;32m-> 90 [0;31m    [0mtop_filters[0m [0;34m=[0m [0mbase_model[0m[0;34m.[0m[0moutput_shape[0m [0;31m# flters in top conv layer (512 for VGG)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     91 [0;31m    [0mfmatrix[0m [0;34m=[0m [0mtf[0m[0;34m.[0m[0mkeras[0m[0;34m.[0m[0mlayers[0m[0;34m.[0m[0mInput[0m[0;34m([0m[0mshape[0m[0;34m=[0m[0;34m([0m[0mbase_model[0m[0;34m.[0m[0moutput[0m[0;34m.[0m[0mshape[0m[0;34m)[0m[0;34m,[0m[0mname[0m[0;34m=[0m[0;34m'fmatrix'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     92 [0;31m    [0;31m#flag = tf.keras.layers.Input(shape=(1))[0m[0;34m[0m[0;34m[0m[0m
[0m
<KerasTensor: shape=(None, None, 7, 7, 256) dtype=float32 (created by layer 'fmatrix')>
TensorShape([None, None, 7, 7, 256])
--KeyboardInterrupt--
For copying text while debugging, use Ctrl+Shift+C
--KeyboardInterrupt--
For copying text while debugging, use Ctrl+Shift+C
